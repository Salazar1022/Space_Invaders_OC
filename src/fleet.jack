/** Maneja una grilla de aliens 16x16 que se mueven en bloque */
class Fleet {
    field Array aliens; // arreglo de Alien16
    field int count;
    field int dir;      // +1 = derecha (xWord++), -1 = izquierda (xWord--)
    field int stepY;    // cuanto baja al tocar borde (16 px)
    field int delayMs;  // temporizador entre pasos

    /** Crea una flota R x C empezando en (startXWord, startY), con gapWords y gapYpx */
    constructor Fleet new(
        int rows, int cols,
        int startXWord, int startY,
        int gapWords, int gapYpx,
        Array sprite1, Array sprite2
    ) {
        var int r; var int c; var int idx; var Alien16 a;
        let aliens = Array.new(rows * cols);
        let count = rows * cols;
        let dir = 1;
        let stepY = 16;
        let delayMs = 120; // ajusta la velocidad aquí

        let r = 0;
        while (r < rows) {
            let c = 0;
            while (c < cols) {
                // Alterna sprites para "animación" simple por columna
                if ((c & 1) = 0) {
                    let a = Alien16.new(startXWord + c*(1+gapWords), startY + r*(16+gapYpx), sprite1);
                } else {
                    let a = Alien16.new(startXWord + c*(1+gapWords), startY + r*(16+gapYpx), sprite2);
                }
                let idx = r*cols + c;
                let aliens[idx] = a;
                do a.draw();
                let c = c + 1;
            }
            let r = r + 1;
        }
        return this;
    }

    /** Borde derecho real: columna 31 (0..31). Izquierdo: 0. */
    method boolean atRightEdge() {
        var int i; var Alien16 a; var int maxW;
        let maxW = 0;
        let i = 0;
        while (i < count) {
            let a = aliens[i];
            if (a.isAlive()) {
                if (a.rightWord() > maxW) { let maxW = a.rightWord(); }
            }
            let i = i + 1;
        }
        // Como cada alien ocupa 1 word de ancho, tocan borde al estar en 31
        if (maxW >= 31) { return true; }
        return false;
    }

    method boolean atLeftEdge() {
        var int i; var Alien16 a; var int minW;
        let minW = 9999;
        let i = 0;
        while (i < count) {
            let a = aliens[i];
            if (a.isAlive()) {
                if (a.leftWord() < minW) { let minW = a.leftWord(); }
            }
            let i = i + 1;
        }
        if (minW <= 0) { return true; }
        return false;
    }

    /** Un paso de movimiento: todos a la derecha o izquierda; si toca borde, bajan y cambian dir */
    method void step() {
        var int i; var Alien16 a;

        if (dir = 1) {
            if (this.atRightEdge()) {
                // tocaron borde: bajar y cambiar dir
                let i = 0;
                while (i < count) {
                    let a = aliens[i];
                    if (a.isAlive()) { do a.moveDown(stepY); }
                    let i = i + 1;
                }
                let dir = -1;
            } else {
                // mover a la derecha
                let i = 0;
                while (i < count) {
                    let a = aliens[i];
                    if (a.isAlive()) { do a.moveX(1); } // 1 word = 16 px
                    let i = i + 1;
                }
            }
        } else {
            if (this.atLeftEdge()) {
                // tocaron borde izquierdo: bajar y cambiar dir
                let i = 0;
                while (i < count) {
                    let a = aliens[i];
                    if (a.isAlive()) { do a.moveDown(stepY); }
                    let i = i + 1;
                }
                let dir = 1;
            } else {
                // mover a la izquierda
                let i = 0;
                while (i < count) {
                    let a = aliens[i];
                    if (a.isAlive()) { do a.moveX(-1); }
                    let i = i + 1;
                }
            }
        }
        // “Animación” sencilla alternando sprite entre pasos (opcional):
        // intercambia sprite1 <-> sprite2 aquí si quieres.
        return;
    }

    method void speedUp() {
        if (delayMs > 20) { let delayMs = delayMs - 10; }
        return;
    }

    /** Comprueba si una bala en (bxWord, by) impacta a algún alien. Si hay impacto, mata el alien y devuelve true. */
    method boolean hitByBullet(int bxWord, int by) {
        var int i; var Alien16 a;
        let i = 0;
        while (i < count) {
            let a = aliens[i];
            if (a.isAlive()) {
                if ((a.leftWord() = bxWord) & (by >= a.topY()) & (by <= a.bottomY())) {
                    do a.kill();
                    return true;
                }
            }
            let i = i + 1;
        }
        return false;
    }
}
